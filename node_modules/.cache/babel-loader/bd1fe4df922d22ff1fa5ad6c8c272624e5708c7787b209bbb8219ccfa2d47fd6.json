{"ast":null,"code":"var _jsxFileName = \"/home/seraphim/Code/js/weather-app/src/components/App/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport Map from '../Map';\nimport Bar from '../Bar';\nimport { Url, ApiKey } from '../../constants.js';\nimport { useCache, useRegion, useRegionID } from './hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const cache = useCache();\n  const region = useRegion();\n  const regionID = useRegionID();\n  const handlerSetRegion = el => {\n    handlerUploadApi(el);\n    setRegion(el);\n  };\n  const handlerUploadApi = el => {\n    const id = el.attributes.id.nodeValue;\n    if (cache[id] === undefined) {\n      fetch(`${Url}/point?place_id=${id}&key=${ApiKey}`).catch(err => alert(`1 step - ${err}`)).then(res => res.json()).catch(err => alert(`2 step - ${err}`)).then(res => {\n        setCache(Object.assign(cache, {\n          [id]: res\n        }));\n        setRegionID(id);\n        setRegion(el);\n      }).catch(err => alert(`3 step - ${err}`));\n    } else {\n      setRegionID(id);\n      setRegion(el);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      handler: handlerSetRegion,\n      region: region\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: cache[regionID] !== undefined ? cache[regionID] : {},\n      region: region\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Lxd2Y//pcJWyhAaR7FZN1qzUlKE=\", false, function () {\n  return [useCache, useRegion, useRegionID];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Map","Bar","Url","ApiKey","useCache","useRegion","useRegionID","App","cache","region","regionID","handlerSetRegion","el","handlerUploadApi","setRegion","id","attributes","nodeValue","undefined","fetch","catch","err","alert","then","res","json","setCache","Object","assign","setRegionID"],"sources":["/home/seraphim/Code/js/weather-app/src/components/App/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\nimport Map from '../Map';\nimport Bar from '../Bar';\nimport { Url, ApiKey } from '../../constants.js';\nimport { useCache, useRegion, useRegionID } from './hooks';\n\nconst App = () => {\n\n  const cache = useCache();\n  const region = useRegion();\n  const regionID = useRegionID();\n\n  const handlerSetRegion = (el) => {\n    handlerUploadApi( el );\n    setRegion( el );\n  }\n\n  const handlerUploadApi = ( el ) => {\n    const id = el.attributes.id.nodeValue;\n\n    if (cache[id] === undefined) {\n      fetch(`${Url}/point?place_id=${id}&key=${ApiKey}`)\n        .catch(err => alert(`1 step - ${err}`))\n        .then(res => res.json())\n        .catch(err => alert(`2 step - ${err}`))\n        .then(res => {\n          setCache(Object.assign(cache, {[id]: res}))\n          setRegionID( id );\n          setRegion( el );\n        })\n        .catch(err => alert(`3 step - ${err}`))\n    } else {\n      setRegionID( id );\n      setRegion( el );\n    }\n  }\n\n  return (\n    <div className='app'>\n      <Map handler={ handlerSetRegion }  region={ region } />\n      <Bar\n        data={ cache[regionID] !== undefined ? cache[regionID] : {} }\n        region={ region }\n      />\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,GAAG,MAAM,QAAQ;AACxB,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAChD,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,SAAS;AAAC;AAE3D,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAMC,KAAK,GAAGJ,QAAQ,EAAE;EACxB,MAAMK,MAAM,GAAGJ,SAAS,EAAE;EAC1B,MAAMK,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,MAAMK,gBAAgB,GAAIC,EAAE,IAAK;IAC/BC,gBAAgB,CAAED,EAAE,CAAE;IACtBE,SAAS,CAAEF,EAAE,CAAE;EACjB,CAAC;EAED,MAAMC,gBAAgB,GAAKD,EAAE,IAAM;IACjC,MAAMG,EAAE,GAAGH,EAAE,CAACI,UAAU,CAACD,EAAE,CAACE,SAAS;IAErC,IAAIT,KAAK,CAACO,EAAE,CAAC,KAAKG,SAAS,EAAE;MAC3BC,KAAK,CAAE,GAAEjB,GAAI,mBAAkBa,EAAG,QAAOZ,MAAO,EAAC,CAAC,CAC/CiB,KAAK,CAACC,GAAG,IAAIC,KAAK,CAAE,YAAWD,GAAI,EAAC,CAAC,CAAC,CACtCE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBL,KAAK,CAACC,GAAG,IAAIC,KAAK,CAAE,YAAWD,GAAI,EAAC,CAAC,CAAC,CACtCE,IAAI,CAACC,GAAG,IAAI;QACXE,QAAQ,CAACC,MAAM,CAACC,MAAM,CAACpB,KAAK,EAAE;UAAC,CAACO,EAAE,GAAGS;QAAG,CAAC,CAAC,CAAC;QAC3CK,WAAW,CAAEd,EAAE,CAAE;QACjBD,SAAS,CAAEF,EAAE,CAAE;MACjB,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAIC,KAAK,CAAE,YAAWD,GAAI,EAAC,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLQ,WAAW,CAAEd,EAAE,CAAE;MACjBD,SAAS,CAAEF,EAAE,CAAE;IACjB;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,GAAG;MAAC,OAAO,EAAGD,gBAAkB;MAAE,MAAM,EAAGF;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACvD,QAAC,GAAG;MACF,IAAI,EAAGD,KAAK,CAACE,QAAQ,CAAC,KAAKQ,SAAS,GAAGV,KAAK,CAACE,QAAQ,CAAC,GAAG,CAAC,CAAG;MAC7D,MAAM,EAAGD;IAAQ;MAAA;MAAA;MAAA;IAAA,QACjB;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GAxCKF,GAAG;EAAA,QAEOH,QAAQ,EACPC,SAAS,EACPC,WAAW;AAAA;AAAA,KAJxBC,GAAG;AA0CT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}