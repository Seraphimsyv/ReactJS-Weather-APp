{"ast":null,"code":"var _jsxFileName = \"/home/seraphim/Code/js/weather-app/src/components/Bar/InfoBase.js\";\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography, Skeleton } from '@mui/material';\nimport Chip from '@mui/material/Chip';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport DeviceThermostatIcon from '@mui/icons-material/DeviceThermostat';\nimport WindPowerIcon from '@mui/icons-material/WindPower';\nimport ThunderstormIcon from '@mui/icons-material/Thunderstorm';\nimport { City } from '../../constants';\nimport { NotLoadedCard } from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoBase = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 1,\n      sx: {\n        margin: 'auto',\n        marginLeft: '2.5em',\n        minWidth: '240px',\n        justifyContent: 'start'\n      },\n      children: props.selected !== null && Object.keys(props.data).length !== 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          mt: -4,\n          color: \"whitesmoke\",\n          children: [City[props.selected.attributes.id.nodeValue], \" region\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"p\",\n          mt: 2,\n          color: \"whitesmoke\",\n          children: props.data.base.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          sx: {\n            fontSize: '3rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          sx: {\n            marginTop: '0em',\n            fontSize: '5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        divider: /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this),\n        spacing: 2,\n        sx: {\n          justifyContent: 'center'\n        },\n        children: props.selected !== null && Object.keys(props.data).length !== 0 ? Object.keys(props.data.cards).map((item, key) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            minWidth: '175px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: `${item}`,\n              sx: {\n                color: 'whitesmoke',\n                marginTop: '1em'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), item === 'temperature' ? /*#__PURE__*/_jsxDEV(DeviceThermostatIcon, {\n              color: \"action\",\n              sx: {\n                margin: 'auto',\n                marginTop: '.25em',\n                marginBottom: '.25em',\n                fontSize: 60\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this) : item === 'wind' ? /*#__PURE__*/_jsxDEV(WindPowerIcon, {\n              color: \"action\",\n              sx: {\n                margin: 'auto',\n                marginTop: '.25em',\n                marginBottom: '.25em',\n                fontSize: 60\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(ThunderstormIcon, {\n              color: \"action\",\n              sx: {\n                margin: 'auto',\n                marginTop: '.25em',\n                marginBottom: '.25em',\n                fontSize: 60\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              sx: {\n                justifyContent: 'center'\n              },\n              children: typeof props.data.cards[item] === 'object' ? Object.keys(props.data.cards[item]).map((subItem, subKey) => /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${props.data.cards[item][subItem]}`,\n                sx: {\n                  color: 'whitesmoke',\n                  margin: '0.25em'\n                },\n                variant: \"outlined\"\n              }, subKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this)) : /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${props.data.cards[item]}Â°C`,\n                sx: {\n                  color: 'whitesmoke'\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)) : Array.from(new Array(3)).map((value, key) => /*#__PURE__*/_jsxDEV(NotLoadedCard, {}, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = InfoBase;\nexport default InfoBase;\nvar _c;\n$RefreshReg$(_c, \"InfoBase\");","map":{"version":3,"names":["React","Box","Typography","Skeleton","Chip","Divider","Stack","DeviceThermostatIcon","WindPowerIcon","ThunderstormIcon","City","NotLoadedCard","InfoBase","props","width","display","flexDirection","margin","marginLeft","minWidth","justifyContent","selected","Object","keys","data","length","textAlign","attributes","id","nodeValue","base","summary","fontSize","marginTop","cards","map","item","key","color","marginBottom","subItem","subKey","Array","from","value"],"sources":["/home/seraphim/Code/js/weather-app/src/components/Bar/InfoBase.js"],"sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography, Skeleton } from '@mui/material';\nimport Chip from '@mui/material/Chip';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport DeviceThermostatIcon from '@mui/icons-material/DeviceThermostat';\nimport WindPowerIcon from '@mui/icons-material/WindPower';\nimport ThunderstormIcon from '@mui/icons-material/Thunderstorm';\n\nimport { City } from '../../constants';\nimport { NotLoadedCard } from './Card';\n\nconst InfoBase = (props) => {\n  return (\n    <Box\n      sx={{\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row'\n      }}\n    >\n      <Stack\n        spacing={1}\n        sx={{\n          margin: 'auto',\n          marginLeft: '2.5em',\n          minWidth: '240px',\n          justifyContent: 'start'\n        }}\n      >\n        {props.selected !== null && Object.keys(props.data).length !== 0  ? (\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-between',\n              textAlign: 'center'\n            }}\n          >\n            <Typography variant='h5' mt={-4} color='whitesmoke'>\n              { City[props.selected.attributes.id.nodeValue] } region\n            </Typography>\n            <Typography variant='p' mt={2} color='whitesmoke'>\n              {props.data.base.summary}  \n            </Typography>\n          </Box>\n        ) : (\n          <Box>\n            <Skeleton variant=\"text\" sx={{ fontSize: '3rem' }} />\n            <Skeleton variant=\"text\" sx={{ marginTop: '0em', fontSize: '5rem' }} />\n          </Box>\n        )}\n      </Stack>\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center'\n        }}\n      >\n        <Stack\n          direction=\"row\"\n          divider={<Divider orientation=\"vertical\" flexItem />}\n          spacing={2}\n          sx={{\n            justifyContent: 'center'\n          }}\n        >\n          {props.selected !== null && Object.keys(props.data).length !== 0  ? (\n            Object.keys(props.data.cards).map((item, key) => (\n              <Box key={key} sx={{ minWidth: '175px' }} >\n                <Stack\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Chip label={`${item}`} sx={{ color: 'whitesmoke', marginTop: '1em' }} />\n                  {\n                    item === 'temperature'\n                    ? <DeviceThermostatIcon color='action' sx={{ margin: 'auto', marginTop: '.25em', marginBottom: '.25em', fontSize: 60 }} />\n                    : item === 'wind'\n                    ? <WindPowerIcon color='action' sx={{ margin: 'auto', marginTop: '.25em', marginBottom: '.25em', fontSize: 60 }} />\n                    : <ThunderstormIcon color='action' sx={{ margin: 'auto', marginTop: '.25em', marginBottom: '.25em', fontSize: 60 }} />\n                  }\n                  <Stack\n                    direction=\"row\"\n                    sx={{ justifyContent: 'center' }}\n                  >\n                    {\n                      typeof props.data.cards[item] === 'object'\n                      ? Object.keys(props.data.cards[item]).map((subItem, subKey) => (\n                        <Chip\n                          key={subKey}\n                          label={`${props.data.cards[item][subItem]}`}\n                          sx={{ color: 'whitesmoke', margin: '0.25em' }}\n                          variant=\"outlined\" \n                        />\n                      ))\n                      : <Chip\n                          label={`${props.data.cards[item]}Â°C`}\n                          sx={{ color: 'whitesmoke' }}\n                          variant=\"outlined\" \n                        />\n                    }\n                  </Stack>\n                </Stack>\n              </Box>\n            ))\n          ) : Array.from(new Array(3)).map((value, key) => (\n            <NotLoadedCard key={key} />\n          ))}\n        </Stack>\n      </Box>\n    </Box>\n  )\n}\n\nexport default InfoBase;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}