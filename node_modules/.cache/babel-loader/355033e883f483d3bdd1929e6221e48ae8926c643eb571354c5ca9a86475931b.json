{"ast":null,"code":"var _jsxFileName = \"/home/seraphim/Code/js/weather-app/src/components/Bar/InfoBase.js\";\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography, Skeleton } from '@mui/material';\nimport Chip from '@mui/material/Chip';\nimport Divider from '@mui/material/Divider';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst city = {\n  Ujgorod: 'Ужгород',\n  Lviv: 'Львов',\n  IvanFr: 'Ивано-франковск',\n  Chernivci: 'Чернивци',\n  Lutsk: 'Лутск',\n  Ternop: 'Тернопиль',\n  Rivne: 'Ривне',\n  Hmel: 'Хмельницкий',\n  Jitom: 'Житомыр',\n  Vinn: 'Виница',\n  Kiiv: 'Киев',\n  Chernigiv: 'Чернигев',\n  Sumy: 'Сумы',\n  Cherkasy: 'Черкасы',\n  Poltava: 'Полтава',\n  Harkiv: 'Харькив',\n  Lugansk: 'Луганск',\n  Odesa: 'Одеса',\n  Kirov: 'Киров',\n  Dnepr: 'Днепр',\n  Donetsk: 'Донецк',\n  Zapor: 'Запорожье',\n  Mykolaiv: 'Миколайв',\n  Simfer: 'Симферопль',\n  Herson: 'Херсонская область'\n};\nconst InfoBase = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 1,\n      sx: {\n        margin: 'auto',\n        marginLeft: '2.5em',\n        minWidth: '240px',\n        justifyContent: 'start'\n      },\n      children: props.selected !== null ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          mt: -4,\n          color: \"whitesmoke\",\n          children: city[props.selected.attributes.id.nodeValue]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"p\",\n          mt: 2,\n          color: \"whitesmoke\",\n          children: props.data.current.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          sx: {\n            fontSize: '3rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          sx: {\n            marginTop: '0em',\n            fontSize: '5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        divider: /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 20\n        }, this),\n        spacing: 2,\n        sx: {\n          justifyContent: 'center'\n        },\n        children: props.selected !== null && Object.keys(props.data).length !== 0 ? props.data.map((value, key) => /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)) : Array.from(new Array(3)).map((value, key) => /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rounded\",\n          width: 160,\n          height: 100\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = InfoBase;\nexport default InfoBase;\nvar _c;\n$RefreshReg$(_c, \"InfoBase\");","map":{"version":3,"names":["React","Box","Typography","Skeleton","Chip","Divider","Paper","Stack","city","Ujgorod","Lviv","IvanFr","Chernivci","Lutsk","Ternop","Rivne","Hmel","Jitom","Vinn","Kiiv","Chernigiv","Sumy","Cherkasy","Poltava","Harkiv","Lugansk","Odesa","Kirov","Dnepr","Donetsk","Zapor","Mykolaiv","Simfer","Herson","InfoBase","props","width","display","flexDirection","margin","marginLeft","minWidth","justifyContent","selected","textAlign","attributes","id","nodeValue","data","current","summary","fontSize","marginTop","Object","keys","length","map","value","key","Array","from"],"sources":["/home/seraphim/Code/js/weather-app/src/components/Bar/InfoBase.js"],"sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography, Skeleton } from '@mui/material';\nimport Chip from '@mui/material/Chip';\nimport Divider from '@mui/material/Divider';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\n\nconst city = {\n  Ujgorod: 'Ужгород',\n  Lviv: 'Львов',\n  IvanFr: 'Ивано-франковск',\n  Chernivci: 'Чернивци',\n  Lutsk: 'Лутск',\n  Ternop: 'Тернопиль',\n  Rivne: 'Ривне',\n  Hmel: 'Хмельницкий',\n  Jitom: 'Житомыр',\n  Vinn: 'Виница',\n  Kiiv: 'Киев',\n  Chernigiv: 'Чернигев',\n  Sumy: 'Сумы',\n  Cherkasy: 'Черкасы',\n  Poltava: 'Полтава',\n  Harkiv: 'Харькив',\n  Lugansk: 'Луганск',\n  Odesa: 'Одеса',\n  Kirov: 'Киров',\n  Dnepr: 'Днепр',\n  Donetsk: 'Донецк',\n  Zapor: 'Запорожье',\n  Mykolaiv: 'Миколайв',\n  Simfer: 'Симферопль',\n  Herson: 'Херсонская область'\n}\n\nconst InfoBase = (props) => {\n  return (\n    <Box\n      sx={{\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row'\n      }}\n    >\n      <Stack\n        spacing={1}\n        sx={{\n          margin: 'auto',\n          marginLeft: '2.5em',\n          minWidth: '240px',\n          justifyContent: 'start'\n        }}\n      >\n        {props.selected !== null ? (\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-between',\n              textAlign: 'center'\n            }}\n          >\n            <Typography variant='h4' mt={-4} color='whitesmoke'>\n              { city[props.selected.attributes.id.nodeValue] }\n            </Typography>\n            <Typography variant='p' mt={2} color='whitesmoke'>\n              {props.data.current.summary}  \n            </Typography>\n          </Box>\n        ) : (\n          <Box>\n            <Skeleton variant=\"text\" sx={{ fontSize: '3rem' }} />\n            <Skeleton variant=\"text\" sx={{ marginTop: '0em', fontSize: '5rem' }} />\n          </Box>\n        )}\n      </Stack>\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center'\n        }}\n      >\n        <Stack\n          direction=\"row\"\n          divider={<Divider orientation=\"vertical\" flexItem />}\n          spacing={2}\n          sx={{\n            justifyContent: 'center'\n          }}\n        >\n          {props.selected !== null && Object.keys(props.data).length !== 0  ? (\n            props.data.map((value, key) => (\n              <Paper key={key}>\n                <Stack>\n                </Stack>\n              </Paper>\n            ))\n          ) : Array.from(new Array(3)).map((value, key) => (\n            <Skeleton key={key} variant=\"rounded\" width={160} height={100} />\n          ))}\n        </Stack>\n      </Box>\n    </Box>\n  )\n}\n\nexport default InfoBase;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}