{"ast":null,"code":"var _jsxFileName = \"/home/seraphim/Code/js/weather-app/src/components/Bar/Board/Base.js\";\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport { LoadedWeatherCard, NotLoadedWeatherCard } from '../Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Base = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      margin: 'auto'\n    },\n    children: props.selected !== null && Object.keys(props.data).length !== 0 ? Object.keys(props.data.cards).map((item, key) => /*#__PURE__*/_jsxDEV(LoadedWeatherCard, {\n      title: item,\n      data: props.data.cards[item]\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)) : Array.from(new Array(4)).map((value, key) => /*#__PURE__*/_jsxDEV(NotLoadedWeatherCard, {}, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Base;\nexport default Base;\nvar _c;\n$RefreshReg$(_c, \"Base\");","map":{"version":3,"names":["React","Box","LoadedWeatherCard","NotLoadedWeatherCard","Base","props","width","display","flexDirection","justifyContent","margin","selected","Object","keys","data","length","cards","map","item","key","Array","from","value"],"sources":["/home/seraphim/Code/js/weather-app/src/components/Bar/Board/Base.js"],"sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\n\nimport { LoadedWeatherCard, NotLoadedWeatherCard } from '../Card';\n\nconst Base = (props) => {\n  return (\n    <Box\n      sx={{\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        margin: 'auto',\n      }}\n    >\n      {props.selected !== null && Object.keys(props.data).length !== 0  ? (\n        Object.keys(props.data.cards).map((item, key) => (\n          <LoadedWeatherCard key={key} title={item} data={props.data.cards[item]} />\n        ))\n      ) : Array.from(new Array(4)).map((value, key) => (\n        <NotLoadedWeatherCard key={key} />\n      ))}\n    </Box>\n  )\n}\n\nexport default Base;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,mBAAmB;AAEnC,SAASC,iBAAiB,EAAEC,oBAAoB,QAAQ,SAAS;AAAC;AAElE,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,oBACE,QAAC,GAAG;IACF,EAAE,EAAE;MACFC,KAAK,EAAE,MAAM;MACbC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE,QAAQ;MACxBC,MAAM,EAAE;IACV,CAAE;IAAA,UAEDL,KAAK,CAACM,QAAQ,KAAK,IAAI,IAAIC,MAAM,CAACC,IAAI,CAACR,KAAK,CAACS,IAAI,CAAC,CAACC,MAAM,KAAK,CAAC,GAC9DH,MAAM,CAACC,IAAI,CAACR,KAAK,CAACS,IAAI,CAACE,KAAK,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAC1C,QAAC,iBAAiB;MAAW,KAAK,EAAED,IAAK;MAAC,IAAI,EAAEb,KAAK,CAACS,IAAI,CAACE,KAAK,CAACE,IAAI;IAAE,GAA/CC,GAAG;MAAA;MAAA;MAAA;IAAA,QAC5B,CAAC,GACAC,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAAC,CAAC,CAAC,CAAC,CAACH,GAAG,CAAC,CAACK,KAAK,EAAEH,GAAG,kBAC1C,QAAC,oBAAoB,MAAMA,GAAG;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,KApBKf,IAAI;AAsBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}